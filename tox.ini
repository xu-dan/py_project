; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    test,
    report
#    docs

[testenv]
basepython =
#    {docs,spell}: {env:TOXPYTHON:python3.5}
#    py35: {env:TOXPYTHON:python3.5}
    {test,clean,check,report}: python3.5
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
#deps =
#    nose
#commands =
#envdir = {toxworkdir}/test
deps =
    pytest
    pytest-cov
commands =
    {posargs:py.test --cov=project --cov-report=term-missing -vv tests}

#[testenv:spell]
#setenv =
#    SPELLCHECK=1
#commands =
#    sphinx-build -b spelling docs dist/docs
#skip_install = true
#deps =
#    -r{toxinidir}/docs/requirements.txt
#    sphinxcontrib-spelling
#    pyenchant
#
#[testenv:docs]
#deps =
#    -r{toxinidir}/docs/requirements.txt
#commands =
#    sphinx-build {posargs:-E} -b doctest docs dist/docs
#    sphinx-build {posargs:-E} -b html docs dist/docs
#    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py

[testenv:report]
envdir = {toxworkdir}/cov
deps = coverage
commands =
    coverage combine
    - coverage report
    - coverage html

[testenv:clean]
envdir = {toxworkdir}/cov
commands = coverage erase
deps = coverage
